HRT_initialize_succession = {
	#Succession if HRE is formed
	if = {
		limit = { exists = title:e_hre.holder }
		every_ruler = {
			if = {
				limit = {
					title:e_hre = {
						place_in_line_of_succession = {
							target = prev
							value == 1
						}
					}
				}
				save_temporary_scope_as = HRT_new_emperor
			}
		}
		scope:HRT_new_emperor = {
			create_story = HRT_emperor_story
			trigger_event = {
				id = HRT_italienzug.0001
				days = { 7 14 }
			}
		}
	}
	#Succession before HRE is formed
	else = {
		ordered_HRT_candidati = {
			order_by = HRT_imperator_score
			position = 0
			save_temporary_scope_as = HRT_new_emperor
			create_story = HRT_emperor_story
			trigger_event = {
				id = HRT_italienzug.0001
				days = { 7 14 }
			}
		}
	}
	#if = { TODO Fallback in case no candidate exists
}

HRT_emperor_story_setup_effect = {
	set_variable = {
		name = HRT_authority
		value = 0
	}
	set_variable = {
		name = HRT_authority_years_reigned
		value = 0
	}
	set_variable = {
		name = HRT_authority_vassals_var
		value = 0
	}
	set_variable = {
		name = HRT_authority_vassals_bonus_var
		value = 0
	}
	set_variable = {
		name = HRT_authority_vassals_war_var
		value = 0
	}
	set_variable = {
		name = HRT_authority_infidels_var
		value = 0
	}
	set_variable = {
		name = HRT_authority_unheld_heartlands
		value = 0
	}

	#Become Independent
	if = {
		limit = { is_independent_ruler = no }
		create_title_and_vassal_change = {
			type = independency
			save_scope_as = change
			add_claim_on_loss = yes
		}
		becomes_independent = {
			change = scope:change
		}
		resolve_title_and_vassal_change = scope:change
	}
}

#GUI
HRT_update_window_effect = {
	if = {
		limit = { exists = title:e_hre.holder }
		set_variable = { #Don't display certain gui elements when Elector voting is active
			name = HRT_formed_gui
			value = yes
		}

		title:e_hre = {
			# Imperator
			holder = { save_scope_as = imperator }
			# Electors
			if = {
				limit = {
					has_title_law = princely_elective_succession_law
				}
				every_elector = {
					limit = {
						NOT = { this = scope:imperator }
					}
					root = {
						add_to_variable_list = {
							name = HRT_electors
							target = prev
						}
					}
				}
			}
		}
		# Candidati ordered by Vote score
		every_living_character = {
			if = {
				limit = {
					title:e_hre = {
						place_in_line_of_succession = {
							target = prev
							value == 1
						}
					}
				}
				save_scope_as = 0
			}
			else_if = {
				limit = {
					title:e_hre = {
						place_in_line_of_succession = {
							target = prev
							value == 2
						}
					}
				}
				save_scope_as = 1
			}
			else_if = {
				limit = {
					title:e_hre = {
						place_in_line_of_succession = {
							target = prev
							value == 3
						}
					}
				}
				save_scope_as = 2
			}
			else_if = {
				limit = {
					title:e_hre = {
						place_in_line_of_succession = {
							target = prev
							value == 4
						}
					}
				}
				save_scope_as = 3
			}
		}
	}

	else = {
		# Imperator
		title:c_aachen.var:HRT_emperor = {
			save_scope_as = imperator
		}
		# Imperator's Primary Heir
		scope:imperator = {
			primary_heir ?= {
				set_variable = {
					name = HRT_prince_var
					value = yes
				}
			}
		}
		# Expectatus (highest scoring Candidatus)
		ordered_HRT_candidati = {
			order_by = HRT_imperator_score
			position = 0
			save_scope_as = 0
		}
		# 3 highest scoring Candidati
		ordered_HRT_candidati = {
			order_by = HRT_imperator_score
			position = 1
			save_scope_as = 1
		}
		ordered_HRT_candidati = {
			order_by = HRT_imperator_score
			position = 2
			save_scope_as = 2
		}
		ordered_HRT_candidati = {
			order_by = HRT_imperator_score
			position = 3
			save_scope_as = 3
		}
	}

	##Set gui variables
	#Imperator
	if = {
		limit = {
			exists = scope:imperator
		}
		set_variable = {
			name = HRT_imperator_gui
			value = scope:imperator
		}
	}
	else = {
		set_variable = {
			name = HRT_missing_imperator_gui
			value = yes
		}
	}
	#Expectatus
	if = {
		limit = {
			exists = scope:0
		}
		set_variable = {
			name = HRT_expectatus_gui
			value = scope:0
		}
	}
	else = {
		set_variable = {
			name = HRT_missing_expectatus_gui
			value = yes
		}
	}
	#Candidati
	if = {
		limit = {
			exists = scope:1
			NOT = {
				scope:1 = scope:0
			}
		}
		add_to_variable_list = {
			name = HRT_candidati_gui
			target = scope:1
		}
	}
	else = {
		set_variable = {
			name = HRT_missing_1_gui
			value = yes
		}
	}
	if = {
		limit = {
			exists = scope:2
			NOR = {
				scope:2 = scope:0
				scope:2 = scope:1
			}
		}
		add_to_variable_list = {
			name = HRT_candidati_gui
			target = scope:2
		}
	}
	else = {
		set_variable = {
			name = HRT_missing_2_gui
			value = yes
		}
	}
	if = {
		limit = {
			exists = scope:3
			NOR = {
				scope:3 = scope:0
				scope:3 = scope:1
				scope:3 = scope:2
			}
		}
		add_to_variable_list = {
			name = HRT_candidati_gui
			target = scope:3
		}
	}
	else = {
		set_variable = {
			name = HRT_missing_3_gui
			value = yes
		}
	}

	#GUI
	set_global_variable = {
		name = HRT_window_is_open
		value = yes
	}

	set_variable = {
		name = HRT_authority_prestige_gui
		value = title:c_aachen.var:HRT_emperor.prestige_level
	}
	set_variable = {
		name = HRT_authority_dread_gui
		value = title:c_aachen.var:HRT_emperor.dread
	}
	set_variable = {
		name = HRT_authority_years_reigned_gui
		value = title:c_aachen.var:HRT_emperor.var:HRT_authority_years_reigned
	}
}

#HRT window on state hide
HRT_clear_variables_effect = {
	every_living_character = {
		limit = { has_variable = HRT_prince_var }
		remove_variable = HRT_prince_var
	}
	if = {
		limit = {
			exists = this
			is_alive = yes
		}
		remove_variable = HRT_imperator_gui
		remove_variable = HRT_expectatus_gui
		clear_variable_list = HRT_candidati_gui
		remove_variable = HRT_missing_1_gui
		remove_variable = HRT_missing_2_gui
		remove_variable = HRT_missing_3_gui
		remove_variable = HRT_missing_expectatus_gui
		remove_variable = HRT_missing_imperator_gui
		clear_variable_list = HRT_electors
	}
	#GUI
	remove_global_variable = HRT_window_is_open
	if = {
		limit = { exists = global_var:HRT_close_window_temp_var }
		remove_global_variable = HRT_close_window_temp_var
	}
}

#Close HRT Window if open
HRT_close_window = {
	if = {
		limit = {  exists = global_var:HRT_window_is_open }
		set_global_variable = {
			name = HRT_close_window_temp_var
			value = yes
		}
	}
}
